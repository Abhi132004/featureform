apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig":
      { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/backend-protocol-version: GRPC
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/subnets: subnet-0c5f47423b4edb1b6, subnet-0a42fdfc6e192c358, subnet-025441d641b61518e  # <----- replace this with the Public Subnets within the VPC in which the EKS cluster exists
    alb.ingress.kubernetes.io/security-groups: 	sg-0503e65faa1868d1b  # <----- replace this with a security group id within the VPC where the EKS cluster exists. Make sure that this security group is allowed to access
    alb.ingress.kubernetes.io/healthcheck-path: /                                 #the EKS worker nodes
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:594284378315:certificate/4493851c-a128-4780-aadb-9611118f5677  #<----- replace this with the ACM certificate ARN for the DNS hostname used
  labels:
    app: sandbox-api-server-ingress
    environment: dev
  name: sandbox-api-server-ingress
spec:
  rules:
    - host: scribd-sandbox.featureform.com # <----- replace this as per your host name for which the SSL certtficate is available in ACM
      http:
        paths:
          - backend:
              serviceName: ssl-redirect
              servicePort: use-annotation
            path: /*
          - backend:
              serviceName: sandbox-api-server
              servicePort: 7878
