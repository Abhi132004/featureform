name: Coverage Testing
on: push

jobs:
  go_coverage:
    name: Go Coverage Test
    defaults:
      run:
        working-directory: ./ff/serving
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16

      - name: Install grpc_tools
        run: pip install grpcio-tools

      - name: Install Protobuf
        run: sudo snap install protobuf --classic

      - name: Setup Proto
        run: ./gen_grpc.sh

      - name: Build
        run: go build

      - name: Coverage Test
        continue-on-error: true
        run: go test -coverprofile cover.out ./...

      - name: Convert Coverage Test Results
        run: go tool cover -html=cover.out -o cover.html

      - name: Archive code coverage results
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-report
          path: ./ff/serving/cover.html

      - name: Generate covarege Status
        run: |
          set -x
          PROJECT_NAME=${PROJECT_NAME}
          total=`go tool cover -func=coverage.out | grep total | grep -Eo '[0-9]+\.[0-9]+'`
          echo "total cov: $total"
          echo "prev build cov: $prev_total"
          (( $(echo "$total > $prev_total" | bc -l) )) && STATE=success || STATE=failure
          curl "https://${GIT_USER}:${GIT_TOKEN}@api.github.com/repos/${ORG_NAME}/${PROJECT_NAME}/statuses/${COMMIT_SHA}" -d "{\"state\": \"${STATE}\",\"target_url\": \"https://github.com/${ORG_NAME}/${PROJECT_NAME}/pull/${PULL_NUMBER}/checks?check_run_id=${RUN_ID}\",\"description\": \"${total}%\",\"context\": \"code cov\"}"
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          GIT_USER: ${{ secrets.GIT_USER }}
          ORG_NAME: ${{ secrets.ORG_NAME }}
          PROJECT_NAME: ${{ secrets.PROJECT_NAME }}
          COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
          PULL_NUMBER: ${{ github.event.pull_request.number }}
          RUN_ID: ${{ github.run_id }}