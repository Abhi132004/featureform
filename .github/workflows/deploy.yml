name: Deploy
on:
  push:
    tags:
      - '*'
jobs:
  api-server:
    name: Build API Server
    environment: Deployment
    defaults:
      run:
        working-directory: ./
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./api/Dockerfile
          tags: featureformcom/api-server:${{ env.RELEASE_VERSION }}
          push: true

#  coordinator:
#    name: Build Coordinator
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./coordinator/Dockerfile
#          tags: local/coordinator:stable
#          push: false
#          outputs: type=docker,dest=/tmp/coordinator.tar
#
#  dashboard:
#    name: Build Dashboard
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./dashboard/Dockerfile
#          tags: local/dashboard:stable
#          push: false
#          outputs: type=docker,dest=/tmp/dashboard.tar
#
#  metadata:
#    name: Build Metadata
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./metadata/Dockerfile
#          tags: local/metadata:stable
#          push: false
#          outputs: type=docker,dest=/tmp/metadata.tar
#
#  dashboard-metadata:
#    name: Build Dashboard Metadata
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./metadata/dashboard/Dockerfile
#          tags: local/metadata-dashboard:stable
#          push: false
#          outputs: type=docker,dest=/tmp/metadata-dashboard.tar
#
#  serving:
#    name: Build Serving
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./newserving/Dockerfile
#          tags: local/serving:stable
#          push: false
#          outputs: type=docker,dest=/tmp/serving.tar
#
#  worker:
#    name: Build Worker
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./runner/Dockerfile
#          tags: local/worker:stable
#          push: true
#          outputs: type=docker,dest=/tmp/worker.tar