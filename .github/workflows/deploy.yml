name: Deploy
on:
  push:
    tags:
      - '*'
jobs:
#  api-server:
#    name: Build API Server
#    environment: Deployment
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Set env
#        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./api/Dockerfile
#          tags: featureformcom/api-server:${{ env.RELEASE_VERSION }}
#          push: true
#
#  coordinator:
#    name: Build Coordinator
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./coordinator/Dockerfile
#          tags: featureformcom/coordinator:${{ env.RELEASE_VERSION }}
#          push: true
#
#  dashboard:
#    name: Build Dashboard
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./dashboard/Dockerfile
#          tags: featureformcom/dashboard:${{ env.RELEASE_VERSION }}
#          push: true
#
#  metadata:
#    name: Build Metadata
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./metadata/Dockerfile
#          tags: featureformcom/metadata:${{ env.RELEASE_VERSION }}
#          push: true
#
#  dashboard-metadata:
#    name: Build Dashboard Metadata
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./metadata/dashboard/Dockerfile
#          tags: featureformcom/metadata-dashboard:${{ env.RELEASE_VERSION }}
#          push: false
#
#
#  serving:
#    name: Build Serving
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./newserving/Dockerfile
#          tags: featureformcom/serving:${{ env.RELEASE_VERSION }}
#          push: true
#
#  worker:
#    name: Build Worker
#    defaults:
#      run:
#        working-directory: ./
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Login to DockerHub
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Build and export
#        uses: docker/build-push-action@v3
#        with:
#          context: .
#          file: ./runner/Dockerfile
#          tags: featureformcom/worker:${{ env.RELEASE_VERSION }}
#          push: true

  helm:
    name: Package Helm
    environment: Deployment
    defaults:
      run:
        working-directory: ./
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Helm
        run: |
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh

      - name: Install GCS CLI
        run: |
          echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -
          sudo apt-get update
          sudo apt-get install google-cloud-sdk

      - name: Create GCloud Key
        id: gcloud-key-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "./gcloud-key.json"
          json: ${{ secrets.GCLOUD_CREDENTIALS }}

      - name: Login GCS
        run: gcloud auth activate-service-account helm-bucket-sa@testing-352123.iam.gserviceaccount.com --key-file=gcloud-key.json --project=testing-352123

      - name: Package Chart
        working-directory: ./charts
        run: helm package ./featureform --app-version ${{ env.RELEASE_VERSION }} --version ${{ env.RELEASE_VERSION }}

      - name: Update Charts
        run: ./update_helm.sh